<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ renderData.title or title or metadata.title }}</title>
    <meta name="Description" content="{{ renderData.description or description or metadata.description }}">

    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap" rel="stylesheet"> 

    <link rel="stylesheet" href="{{ '/css/index.css' | url }}">
    <link rel="alternate" href="{{ metadata.feed.path | url }}" type="application/atom+xml" title="{{ metadata.title }}">
  </head>
  <body class="flex col">
    <header class="flex row center">
      <div class="flex stack col center">
        {% include "logo.njk" %}
        <h2>Rosi Grillmair</h2>
      </div>
    </header>

    <div class="flex row">
      <nav>
      {% include "nav.njk" %}
      </nav>

      <main{% if templateClass %} class="{{ templateClass }}"{% endif %}{% if title %} id="{{ title | lowercase }}"{% endif %}>
        {{ content | safe }}
      </main>
    </div>

    <footer></footer>

    <!-- Current page: {{ page.url | url }} -->
  </body>
  <script>
    window.addEventListener( 'DOMContentLoaded', ( event ) => {

      const main = document.querySelector('main');
      const mainId = main.id;

      switch ( mainId ) {
        case 'cv':
          const lang = document.querySelector( '#lang' );
          const buttons = document.querySelectorAll( '#lang .button' );
          const container = document.querySelector( '#cv > div' );
          const slider = document.querySelector( '#slider' );

          lang.addEventListener( 'click', event => {
            
            buttons.forEach( b => {
                b.classList.toggle( 'active' );
              });
            slider.classList.toggle( 'eng' );
            container.classList.toggle( 'eng' );
          })
          break;
      }

      const mainClass = Array.from(main.classList)
        .filter( cl => cl.includes( 'tmpl') )
        .map( cl => { 
          return cl.split( '-' )[1];
         });

      const handlers = {
      };

      mainClass.forEach( c => {
        if ( c in handlers) handlers[c]( main );
      });

    });
  </script>
</html>
